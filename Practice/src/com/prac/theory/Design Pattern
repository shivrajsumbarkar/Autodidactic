Design Pattern :: 
	1.Design patterns, are solutions for most commonly (and frequently) occurred problems while designing a software.
	2.design patterns are programming language independent strategies for solving the common object-oriented design problems.
	3.By using the design patterns you can make your code more flexible, reusable and maintainable.
	4.They provide the solutions that help to define the system architecture.

1.Creational Design Pattern
		Factory Pattern or Factory Method Pattern
		== define an interface or abstract class for creating an object but let the subclasses decide which class to instantiate. 
			In other words, subclasses are responsible to create the instance of the class.
		Abstract Factory Pattern
		Singleton Pattern
		Prototype Pattern
		Builder Pattern.
		
2. Structural Design Pattern
		Adapter Pattern
		Bridge Pattern
		Composite Pattern
		Decorator Pattern
		Facade Pattern
		Flyweight Pattern
		Proxy Pattern
		
3. Behavioral Design Pattern
		Chain Of Responsibility Pattern
		Command Pattern
		Interpreter Pattern
		Iterator Pattern
		Mediator Pattern
		Memento Pattern
		Observer Pattern
		State Pattern
		Strategy Pattern
		Template Pattern
		Visitor Pattern	